<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="close" @onclick="@ModelCancel" >&times;</button>
            </div>
            <div class="modal-body">
                <p>@Text</p>
            </div>
            <div class="modal-footer">
                @switch (DialogType)
            
                { 
                    case ModelDialogType.Ok:
                        <button type="button" class="btn btn-primary" @onclick=@ModelOk>OK</button>
                        break;
                    case ModelDialogType.OkCancel:
                        <button type="button" class="btn" @onclick="@ModelCancel">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick=@ModelOk>OK</button>
                        break;
                    case ModelDialogType.DeleteCancel:
                        <button type="button" class="btn" @onclick="@ModelDeleteCancel">Cancel</button>
                        <button type="button" class="btn btn-danger" @onclick=@ModelOk>Delete</button>
                        break;
                 }
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Text { get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    [Parameter]
    public ModelDialogType DialogType { get; set; }

    private Task ModelCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private Task ModelOk()
    {
        return OnClose.InvokeAsync(true);
    }
    private Task ModelDeleteCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    public enum ModelDialogType
    {
        Ok,
        OkCancel,
        DeleteCancel
    }
}